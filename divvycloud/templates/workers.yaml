apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "divvycloud.name" . }}-worker
  labels:
    app: {{ template "divvycloud.name" . }}-worker
    chart: {{ template "divvycloud.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    app.kubernetes.io/name: {{ template "divvycloud.name" . }}

spec:
  replicas: {{ if .Values.replicaCounts  }}  {{ .Values.replicaCounts.workers | default 2 }} {{ else }} 2 {{ end }}
  selector:
    matchLabels:
      app: {{ template "divvycloud.name" . }}-worker
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "divvycloud.name" . }}-worker
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: {{ .Values.imageName }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          {{if eq .Values.enablePlugins true}}
          command: ['sh','/scripts/entrypoint.sh']
          {{end}}
          args: ['divvycloud', 'worker']
          envFrom:
            - secretRef:
                name: {{ template "divvycloud.name" . }}-secret 
          volumeMounts:
          {{if eq .Values.enablePlugins true}}
          - name: plugins
            mountPath: /tmpPlugins/
            readOnly: true
          {{end}}
          - name: entrypoint
            mountPath: /scripts/
      {{if .Values.imagePullSecret}}
      imagePullSecrets:
        - name: {{ .Values.imagePullSecret }}
      {{end}}
      volumes:
      {{if eq .Values.enablePlugins true}}
      - name: plugins
        secret:
            secretName: divvycloud-plugins
      {{end}}
      - name: entrypoint
        secret:
            secretName: {{ template "divvycloud.name" . }}-entrypoint
